#!/usr/bin/env python

import os, sys
from munin.mongodb import MuninMongoDBPlugin

class MonqueJobCountPlugin(MuninMongoDBPlugin):
    args = "-l 0 --base 1000"
    vlabel = "jobs"
    title = "Monque job count"
    info = "Operations"
    category = "Monque"

    @property
    def fields(self):
        self.queues = []
        cur = self.db['monque:queue_stats'].find()
        for row in cur:
            try:
                queue = row['queue']
                self.queues.append(queue)
            except KeyError:
                pass
        fie = [
            ("%s_success" % queue, dict(
                label = "%s succeeded" % queue,
                info = "%s job succeeded count" % queue,
                type = "COUNTER",
            )) for queue in self.queues
        ] + [
            ("%s_failure" % queue, dict(
                label = "%s failed" % queue,
                info = "%s job failed count" % queue,
                type = "COUNTER",
            )) for queue in self.queues
        ] + [
            ("%s_retries" % queue, dict(
                label = "%s retried" % queue,
                info = "%s job retried count" % queue,
                type = "COUNTER",
            )) for queue in self.queues
        ]
        f1.extend(f2)
        return fie

    @property
    def title(self):
        return "monque job count"

    def execute(self):
        result = dict()
        cur = self.db['monque:queue_stats'].find()
        for row in cur:
            queue = row['queue']
            result['%s_success' % queue] = row['successes']
            result['%s_failure' % queue] = row['failures']
            result['%s_retries' % queue] = row['retries']
        return result

if __name__ == "__main__":
    MonqueJobCountPlugin().run()
